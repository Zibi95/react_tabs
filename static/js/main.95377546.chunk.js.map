{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","isLinkActive","tabId","isAnySelected","some","tab","id","className","map","href","onClick","title","find","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAYaA,EAAO,SAAC,GAAuD,IAAD,EAApDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,cACpCC,EAAe,SAACC,GACpB,IAAMC,EAAgBL,EAAKM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOP,KAElD,OAAII,GAAiBD,IAAUH,EACtB,YAGJI,GAAiBD,IAAUJ,EAAK,GAAGQ,QAAxC,EACS,aAMX,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAACH,GACT,OACE,oBAEEE,UAAWN,EAAaI,EAAIC,IAC5B,UAAQ,MAHV,SAKE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,WACHL,EAAIC,KAAOP,GACbC,EAAcK,IALpB,SASGA,EAAIM,SAbFN,EAAIC,WAqBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGT,EAAKc,MAAK,SAACP,GAAD,OAASA,EAAIC,KAAOP,YADjC,aACG,EAA8Cc,cClD1Cf,EAAO,CAClB,CAAEQ,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASjB,EAAK,GAAGQ,IAA3D,mBAAOP,EAAP,KAAsBiB,EAAtB,KAMA,OACE,sBAAKT,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGGT,EAAKc,MAAK,SAAAP,GAAG,OAAIA,EAAIC,KAAOP,YAH/B,aAGG,EAA4CY,SAG/C,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACK,GACrBW,EAAiBX,EAAIC,WCbzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.95377546.chunk.js","sourcesContent":["export type Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ntype TabsProps = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: TabsProps) => {\n  const isLinkActive = (tabId: string) => {\n    const isAnySelected = tabs.some(tab => tab.id === selectedTabId);\n\n    if (isAnySelected && tabId === selectedTabId) {\n      return 'is-active';\n    }\n\n    if (!isAnySelected && tabId === tabs[0].id) {\n      return 'is-active';\n    }\n\n    return undefined;\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            return (\n              <li\n                key={tab.id}\n                className={isLinkActive(tab.id)}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (tab.id !== selectedTabId) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find((tab) => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {tabs.find(tab => tab.id === selectedTabId)?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}